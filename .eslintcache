[{"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\index.js":"1","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\App.js":"2","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\components\\NavBar\\NavBar.js":"3","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\components\\Home\\Home.js":"4","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\components\\Instructions\\Instructions.js":"5","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\components\\ImageSearch\\ImageSearch.js":"6","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\api_keys.js":"7","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\net\\serialize.js":"8","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\net\\http_requests.js":"9","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\models\\food_model.js":"10"},{"size":230,"mtime":1608336131087,"results":"11","hashOfConfig":"12"},{"size":780,"mtime":1608938350851,"results":"13","hashOfConfig":"12"},{"size":682,"mtime":1608961124478,"results":"14","hashOfConfig":"12"},{"size":3269,"mtime":1608961124469,"results":"15","hashOfConfig":"12"},{"size":2822,"mtime":1608961124475,"results":"16","hashOfConfig":"12"},{"size":4349,"mtime":1608961194737,"results":"17","hashOfConfig":"12"},{"size":573,"mtime":1608961210003,"results":"18","hashOfConfig":"12"},{"size":945,"mtime":1608938350854,"results":"19","hashOfConfig":"12"},{"size":612,"mtime":1608336131088,"results":"20","hashOfConfig":"12"},{"size":240,"mtime":1608336131087,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1yp4x8l",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\index.js",[],["45","46"],"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\App.js",[],"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\components\\Home\\Home.js",[],"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\components\\Instructions\\Instructions.js",[],"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\components\\ImageSearch\\ImageSearch.js",["47"],"import React, {Component} from 'react';\r\nimport {Container, Jumbotron} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport '@tensorflow/tfjs';\r\nimport './ImageSearch.css'\r\n\r\nconst mobilenet = require('@tensorflow-models/mobilenet')\r\nconst Serialize = require('../../net/serialize');\r\nconst keys = require('../../api_keys');\r\n\r\nlet net;\r\n\r\nclass ImageSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            result: {\r\n                'name': null,\r\n                'prob': null,\r\n            },\r\n            food: [],\r\n            search: '',\r\n            foodResults: false,\r\n            loading: false,\r\n            display: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            image: URL.createObjectURL(event.target.files[0]),\r\n            display: '5px solid #285B52'\r\n        })\r\n    }\r\n\r\n    app = async () => {\r\n        this.setState({loading: true})\r\n        const img = document.getElementById('img');\r\n\r\n        net = await mobilenet.load();\r\n        return await net.classify(img);\r\n    }\r\n\r\n    recipeLoad = () => {\r\n        Serialize.foodData(`https://api.spoonacular.com/recipes/complexSearch/?query=${this.state.search}&apiKey=${keys.food()}&number=100&includeNutrition=false`)\r\n            .then(r => {\r\n                this.setState({\r\n                    food: r,\r\n                    foodResults: true,\r\n                });\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.image !== null || \"\") {\r\n            console.log(\"in\")\r\n            this.app().then(value => {\r\n                this.setState({\r\n                    loading: false, \r\n                    result: {'name': value[0]['className'], 'prob': value[0]['probability']},\r\n                    search: value[0]['className'],\r\n                    })\r\n                    this.recipeLoad();\r\n            })\r\n            this.setState({image: null})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let {name, prob, loading} = this.state.result;\r\n        let {food, foodResults} = this.state;\r\n        return (\r\n            <Container>\r\n                <div className='container'>\r\n                    {/* eslint-disable-next-line jsx-a11y/alt-text */}\r\n                    <img style={{border: this.state.display}} className='image-upload' crossOrigin='anonymous' id={'img'} src={this.state.image}/>\r\n                    <h1 className='image-search-title'>SEARCH WITH AN IMAGE</h1>\r\n                    <form className='form' style={{marginBottom: 30}}>\r\n                        <input className='upload-file' onChange={this.handleChange} id='uploaded' type='file' accept=\"image/png, image/jpeg\"/>\r\n                    </form>\r\n<<<<<<< HEAD\r\n                    <Jumbotron style={{'marginTop': 50}}>\r\n=======\r\n                    <div className='button'>\r\n                        <Button size=\"lg\" style={{width: '50%'}} block onClick={() => this.app().then(value => {\r\n                            this.setState({\r\n                                loading: false, \r\n                                result: {'name': value[0]['className'], 'prob': value[0]['probability']},\r\n                                search: value[0]['className'],\r\n                                })\r\n                                this.recipeLoad();\r\n                        })}\r\n                                variant=\"primary\">\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                    <Jumbotron style={{'marginTop': 0, padding: 0, display: 'block'}}>\r\n>>>>>>> bfb554a12b097c7585cf26e964e116c4d4bb2e6f\r\n                        {loading ?\r\n                            <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n                            :\r\n                            <div className='container'>\r\n                                <h5 className='image-search-title'>{name == null ? null : `Name: ${name.toUpperCase()}`}</h5>\r\n                                <h5 className='image-search-title'>{prob == null ? null : `Confidence: ${prob.toFixed(2)*100}%`}</h5>\r\n                            </div>\r\n                        }\r\n                        {foodResults === true ? \r\n                            food.map((item, index) => {\r\n                                    return (\r\n                                        <div className={\"recipe\"} key={index}>\r\n                                            <Link to={{pathname: '/instructions', item: item}}>\r\n                                            <img className={'recipe-img'} src={item.img} alt={item.title} />\r\n                                            <h1 className={'recipe-title'}>{item.title}</h1>\r\n                                            </Link>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            )\r\n                        : <br />}\r\n                    </Jumbotron>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ImageSearch;\r\n","C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\api_keys.js",[],"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\net\\serialize.js",[],"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\net\\http_requests.js",[],"C:\\Users\\Ben\\Documents\\VS Code\\holiday-hacks\\src\\models\\food_model.js",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":null,"fatal":true,"severity":2,"message":"54","line":44,"column":2},{"ruleId":"50","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 42 | \u001b[39m        net \u001b[33m=\u001b[39m await mobilenet\u001b[33m.\u001b[39mload()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 43 | \u001b[39m        \u001b[36mreturn\u001b[39m await net\u001b[33m.\u001b[39mclassify(img)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 44 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 45 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 46 | \u001b[39m        } \u001b[36melse\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 47 | \u001b[39m            alert(\u001b[32m'Upload an image before clicking search'\u001b[39m)\u001b[0m",["57"],["58"],"no-global-assign","no-unsafe-negation"]